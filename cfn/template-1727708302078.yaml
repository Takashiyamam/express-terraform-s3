AWSTemplateFormatVersion: '2010-09-09'
Description: Setup for GitHub Actions with OIDC, including S3, DynamoDB, and IAM Role

Parameters:
  S3BucketName:
    Type: String
    Default: express-terraform-s3-terraform-state-bucket
    Description: Bucket name for state file
  DynamoDBTableName:
    Type: String
    Default: express-terraform-s3-terraform-state-lock-table
    Description: Table for state lock
  GitHubAccountName:
    Type: String
    Default: Takashiyamam
    Description: GitHub account name of the repository
  GitHubRemoteRepoName:
    Type: String
    Default: express-terraform-s3
    Description: Repository name of terraform
  PolicyName:
    Type: String
    Default: express-terraform-s3-GitHubActionsPolicy
    Description: Policy for GitHub Actions

Resources:
  # S3 Bucket for Terraform state
  TerraformStateBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref S3BucketName

  # DynamoDB Table for Terraform state lock
  TerraformStateLockTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref DynamoDBTableName
      AttributeDefinitions:
        - AttributeName: LockID
          AttributeType: S
      KeySchema:
        - AttributeName: LockID
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  # OIDC Provider for GitHub Actions
  GitHubOIDCProvider:
    Type: AWS::IAM::OIDCProvider
    Properties:
      Url: https://token.actions.githubusercontent.com
      ClientIdList:
        - sts.amazonaws.com
      ThumbprintList:
        - 6938fd4d98bab03faadb97b34396831e3780aea1
        - 1c58a3a8518e8759bf075b76b750d4f2df264fcd

  # IAM Role for GitHub Actions
  GitHubActionsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated: !GetAtt GitHubOIDCProvider.Arn
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: sts.amazonaws.com
              StringLike:
                token.actions.githubusercontent.com:sub: repo:${GitHubAccountName}/${GitHubRemoteRepoName}:*
      Policies:
        - PolicyName: !Ref PolicyName
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:GetBucketLocation
                  - s3:ListBucketMultipartUploads
                  - s3:ListBucketVersions
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                  - s3:DeleteObject
                Resource:
                  - !Sub arn:aws:s3:::${TerraformStateBucket}
                  - !Sub arn:aws:s3:::${TerraformStateBucket}/*
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:DeleteItem
                  - dynamodb:Query
                  - dynamodb:Scan
                  - dynamodb:UpdateItem
                Resource: !GetAtt TerraformStateLockTable.Arn

Outputs:
  TerraformStateBucketName:
    Description: Terraform state bucket name
    Value: !Ref TerraformStateBucket

  TerraformStateLockTableName:
    Description: Terraform state lock DynamoDB table name
    Value: !Ref TerraformStateLockTable

  GitHubActionsRoleArn:
    Description: IAM Role ARN for GitHub Actions
    Value: !GetAtt GitHubActionsRole.Arn

  GitHubOIDCProviderArn:
    Description: OIDC Provider ARN
    Value: !GetAtt GitHubOIDCProvider.Arn